@using ServerSentEventsTest;

@{
    ViewBag.Title = "SSE Testpage";
}

<h2>Testpage for Server-Sent Events using ASP.NET WebApi</h2>

<p>This page uses <a href="#">ServerSentEvent4Net</a>, which is available as a <a href="#">NuGet-package</a>.</p>

@{  string relPath = Url.HttpRouteUrl("DefaultApi", new { controller = "SSE" });
    string absPath = Url.ToPublicUrl(relPath);
}

<p>The following list is updated from <a href='@absPath'>@absPath</a>.</p>
@*        string storeLink = Url.HttpRouteUrl("DefaultApi", new { controller = "Store", id = store.Id });
          store.Url = new Uri(Request.Url, storeLink).AbsoluteUri.ToString();*@

<p>Filter messages when subscribing to this event.</p>
<form id="criteria">
    <input type="radio" name="filter" value="both" checked="checked">Both<br />
    <input type="radio" name="filter" value="odd">Odd<br />
    <input type="radio" name="filter" value="even">Even<br />
</form>


<ul id="messagesList">
    
</ul>
    
<p>Number of connected clients: <span id="clientsCounterSpan"></span></p>  

@section scripts {
<script type="text/javascript">
    $(function () {

        $("#criteria").change(function () {
            var message_index

            var selectedText = $('input[name=filter]:checked', '#criteria').val()
            alert(selectedText);

            startSubscription('api/SSE/' + selectedText);

        });



        if (!!window.EventSource) {

            var clients = new EventSource('api/Clients');
            clients.addEventListener('message', function (e) {
                console.log(e.data);
                $('#clientsCounterSpan').text(e.data);
            }, false);

            clients.addEventListener('open', function (e) {
                console.log("clients counter open!");
            }, false);

            clients.addEventListener('error', function (e) {
                if (e.readyState == EventSource.CLOSED) {
                    console.log("error in clientscounter!");
                }
            }, false);

            startSubscription('api/SSE');


        } else {
            // not supported!               
        }
        
        
    });

    var eventSource = undefined;

    function startSubscription(path)
    {
        if (typeof eventSource != 'undefined') {
            eventSource.close();
        };
        eventSource = undefined;
        var source = new EventSource(path);
        source.addEventListener('message', function (e) {
            console.log(e.data);
            $('#messagesList').append($('<li>').append(e.data).append('</li>'));


            if ($('#messagesList > li').length > 10)
                $('#messagesList li:first').remove();

        }, false);

        source.addEventListener('open', function (e) {
            console.log("open!");
        }, false);

        source.addEventListener('error', function (e) {
            if (e.readyState == EventSource.CLOSED) {
                console.log("error!");
            }
        }, false);

        eventSource = source;
    }

</script>
}